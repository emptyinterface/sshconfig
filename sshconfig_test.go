package sshconfig

import (
	"bytes"
	"fmt"
	"strings"
	"testing"
)

var (
	ssh_config_example = `# ssh config generated by some go code (github.com/emptyinterface/ssh_config)

# global configuration
VisualHostKey yes

# host-based configuration

# dev
Host dev
  HostName 127.0.0.1
  User ubuntu
  Port 22

Host *.google.com *.yahoo.com
  User root
`
)

func TestParseAndWriteTo(t *testing.T) {

	config, err := Parse(strings.NewReader(ssh_config_example))
	if err != nil {
		t.Error(err)
	}

	buf := &bytes.Buffer{}

	config.WriteTo(buf)

	if buf.String() != ssh_config_example {

		fmt.Println(ssh_config_example, "====")
		fmt.Println(buf.String(), "====")

		t.Errorf("input output mismatch")
	}

}
